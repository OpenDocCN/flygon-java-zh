- en: In the preceding example, we have added three properties to the `Season` class: `feel`,
    `toString`, and `averageTemperature`. We have also created a constructor (a special method
    used to assign the initial values of an object state) that takes these three properties
    and adds getters and `toString()` methods that return values of these properties.
    Then, in parentheses after each constant, we have set the values that are going
    to be passed to the constructor when this constant is created.
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的示例中，我们在`Season`类中添加了三个属性：`feel`、`toString`和`averageTemperature`。我们还创建了一个构造函数（用于为对象状态分配初始值的特殊方法），该构造函数接受这三个属性并添加获取器和`toString()`返回值的方法。然后，在每个常量的括号中，我们设置了在创建此常量时要传递给构造函数的值。
- en: 'Here is a demo method that we are going to use:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们将要使用的演示方法：
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The `enumDemo()` method takes the `enum Season` constant and constructs and
    displays two sentences. Let''s run the preceding code for each season, like this:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '`enumDemo()`方法接受`enum Season`常量并构造并显示两个句子。让我们为每个季节运行上述代码，就像这样：'
- en: '[PRE1]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The result will be as follows:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![](img/90d857fd-ef52-4317-97b9-d2435ab70fb9.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/90d857fd-ef52-4317-97b9-d2435ab70fb9.png)'
- en: 'The `enum` class is a very powerful tool that allows us to simplify the code
    and make it better protected from runtime errors because all possible values are
    predictable and can be tested in advance. For example, we can test the `SPRING`
    constant getters using the following unit test:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '`enum`类是一种非常强大的工具，它允许我们简化代码，并使其在运行时更加受保护，因为所有可能的值都是可预测的，并且可以提前测试。例如，我们可以使用以下单元测试来测试`SPRING`常量的获取器：'
- en: '[PRE2]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Granted, the getters don't have much code to make a mistake. But if the `enum`
    class has more complex methods or the list of the fixed values comes from some
    application requirements document, such a test will make sure we have written
    the code as required.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，获取器的代码不会出现太多错误。但如果`enum`类有更复杂的方法，或者固定值列表来自于一些应用需求文档，这样的测试将确保我们已按照要求编写了代码。
- en: 'In the standard Java libraries, there are several `enum` classes. Here are
    a few examples of constants from those classes that can give you a hint about
    what is out there:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在标准的Java库中，有几个`enum`类。以下是这些类中常量的几个例子，可以让你了解其中的内容：
- en: '[PRE3]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: So, before creating your own `enum`, try to check and see whether the standard
    libraries already provide a class with the values you need.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，在创建自己的`enum`之前，尝试检查并查看标准库是否已提供具有所需值的类。
- en: Passing reference type values as method parameters
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将引用类型值作为方法参数传递
- en: 'One important difference between the reference types and primitive types that
    merits special discussion is the way their values can be used in a method. Let''s
    see the difference by example. First, we create the `SomeClass` class:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 一种需要特别讨论的引用类型和原始类型之间的重要区别是它们的值在方法中的使用方式。让我们通过示例来看看区别。首先，我们创建`SomeClass`类：
- en: '[PRE4]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Then we create a class that uses it:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们创建一个使用它的类：
